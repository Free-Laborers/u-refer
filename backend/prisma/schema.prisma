generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //url      = "postgresql://postgres:docker@localhost:5432/urefer?schema=public"
}

enum Referral_Status {
  OPEN
  CONTACTED
  REJECTED
  HIRED
}

model Employee {
  id          String     @id @default(uuid())
  email       String     @unique
  password    String
  firstName   String
  lastName    String
  pronoun     String?
  position    String
  createdDate DateTime   @default(now())
  isManager   Boolean    @default(false)
  JobPost     JobPost[]
  Referral    Referral[]
}

model Candidate {
  id         String     @id @default(uuid())
  email      String     @unique
  firstName  String
  lastName   String
  pronoun    String?
  phone      String?
  employeeId String?    @unique
  Referral   Referral[]
}

model JobPost {
  id                 String      @id @default(uuid())
  title              String
  position           String
  description        String
  minYearsExperience Int
  salary             Int
  openings           Int         @default(1)
  createdDate        DateTime    @default(now()) @db.Timestamp
  deletedDate        DateTime?
  Employee           Employee    @relation(fields: [hiringManagerId], references: [id])
  hiringManagerId    String
  Referral           Referral[]
  PostToTag          PostToTag[]
}

model Referral {
  id             String          @id @default(uuid())
  Employee       Employee        @relation(fields: [employeeId], references: [id])
  Candidate      Candidate       @relation(fields: [candidateId], references: [id])
  JobPost        JobPost         @relation(fields: [jobPostId], references: [id])
  employeeId     String
  candidateId    String
  jobPostId      String
  description    String
  resumeFilePath String?
  createdDate    DateTime        @default(now())
  contactedDate  DateTime?
  finishedDate   DateTime?
  status         Referral_Status @default(OPEN)
  deletedDate    DateTime?
}

model PostToTag {
  id        String  @id @default(uuid())
  JobPost   JobPost @relation(fields: [jobPostId], references: [id])
  Tag       Tag     @relation(fields: [tagId], references: [id])
  jobPostId String
  tagId     String
}

model Tag {
  id        String      @id @default(uuid())
  name      String      @unique
  PostToTag PostToTag[]
}
